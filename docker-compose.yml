version: "3.7"
services:
  db:
    image: postgres:12.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env.dev.db

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    expose:
      - 8000
    env_file:
      - ./.env.dev
    command: [sh, -c, "cd storymanager && python3 manage.py runserver 0.0.0.0:8000"]
    depends_on:
      - db
    links:
      - db

  redis:
    image: redis:5.0.6-alpine
    expose:
      - 6379

  daphne:
    image: "backend:latest"
    build:
      context: ./backend
      dockerfile: Dockerfile
    working_dir: /usr/src/app
    env_file:
      - ./.env.dev
    command: [sh, -c, "cd storymanager
      && daphne storymanager.asgi:application -b 0.0.0.0 -p 9000"]
    ports:
      - "9000:9000"
    depends_on:
      - redis
    links:
      - redis

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/app/frontend/
      - node_modules:/app/frontend/node_modules
    env_file:
      - ./.env.dev
    ports:
      - "1234:1234"
    depends_on:
      - backend

volumes:
  postgres_data:
  node_modules:
